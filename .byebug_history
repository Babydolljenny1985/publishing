c
c 
n 
p flash
n 
p flash
c
p flash
c
n 
flash[:recaptcha_error] 
c
page.body
page
c
 page.body
p page.body
p page
c
:recaptcha_error.to_s
c
p flash
c
 resource_class.open_authentications
 resource_class.public_instance_methods
 resource_class
 resource_class.omniauth_providers_names
 resource_class.omniauth_providers.map(&:name)
 resource_class.omniauth_providers.map(&:names)
 resource_class.omniauth_providers.names
 resource_class.omniauth_providers.NAMES
 resource_class.omniauth_providers.FIRST 
 resource_class.omniauth_providers
c
user["info"]["email"]
user["info"]["name"]
c
p flash
c
c 
p flash
c
p flash
c
p flash
c
nc
c
n
p user
c
reload
reload!
OpenAuthentication.where(provider: auth.provider, uid: auth.uid).count
OpenAuthentication.where(provider: auth.provider, uid: auth.uid)
OpenAuthentication.oauth_user_exists?(auth)
User.last
OpenAuthentication.where(provider: auth.provider, uid: auth.uid)
OPenAuthentication.where(provider: auth.provider, uid: auth.uid)
auth.uid
auth.provider
OpenAuthentication.oauth_user_exists?(auth)
auth 
c
 params[:intent]
p env["omniauth.params"]["intent"] 
c
params.keys
params[:intent
params
c
mailc
c 
c
p user
n 
params
c
params
p intent
c
intent
intest
c
;c
p params
c
params
c 
c
params
c
n
p flash
c
oauth_user
User.find_by_id(oauth_user.user_id)
n 
c 
c
c 
c
params
c
 request.env["omniauth.auth"].keys
c
n 
User.new(email: params[:email], password: Devise.friendly_token[0,16], username:  params[:name])
    6:                      username:  params[:name])
User.new(email: params[:email], password: Devise.friendly_token[0,16],
params[:email]
params
exit
params
c
n 
params
c
params
c
session
params
c
params
c
 params[:info]
 params[:info][:email]
c
params
c
n 
params
c
n 
