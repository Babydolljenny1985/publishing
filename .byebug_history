c
@page.referents
@page
c
ref.body.html_safe?
c
ref.body
c
ref.body
c
@page.referents_count
c
@page
c
exit
reference["referenceId"]
c
reference_id
reference["referenceId"]
c
n
reference_id
c
n
c
n
reference_ids
c
name.attribution
name
c
@page.literature_count
@page.referents_count
@page.literatur
@page
c
n
resource_id
c
exit
n
t(:name_recognized_by, by: formatted_names.to_sentence).html_safe
n
content_partner_id
vontent_partner_id
n
str
n
result
n
resource_id
exit
params[:references]
params
exit
n
params[:resource_id]
params
c
res
c
params[:guid]
params
params["guid"]
res
c
res.count
res
exit
c
t("languages.#{lang}")
c
t("languages.#{lang}")
c
t("languages.#{lang}")
c
t("languages.#{lang}")
c
t("languages.#{lang}")
names[lang]
names_by_lang
exit
names_by_lang.group_by
string
c
names_by_lang
str
formatted_names.to_sentence
formatted_names
c
@page.scientific_names
@page.scientific_names.group_by { |n| n.taxonomic_status.name }.each do |status, scientific_names|
- @page.scientific_names.group_by { |n| n.taxonomic_status.name }.each do |status, scientific_names|
c
e
c
e
exit
c
result
c
params
c
params
c
e
c
e
c
media.language_id
media.resource_id
media
c
name.sub(/^File:/, "")
name
c
medium["agents"]
c
medium["agents"]
exit
medium["agents"]
c
medium["agents"]
medium
c
exit
c
n
exit
c
medium["agentId"]
 medium[:agentId]
medium
exit
c
params
params["agentId"]
agent["agentId"]
exit
node
n
c
node
n
c
node
n
exit
c
n
c
n
c
@license
n
media
n
params
c
params
c
media.size
c
media.first.license
media.license
c
media.first.license
media.first.license_id
media.license_id
media.License
media.license
media
n
media
c
n
params
n
c
@media
media
media.page(params[:page])
page(params[:page]).per_page(@media_page_size)
page(params[:page])
 media.page(params[:page]).per_page(@media_page_size)
params[:page]
params
@media
n
c
@page.media
page.media
media
c
media = @page.media.includes(:license)
@page.media
media = @page.media
media = @page.media.includes(:license)
media
c
page_contents
n
params
c
result
n
c
image
c
params
c
params
c
media
c
@page.media.includes(:license, :resource)
@page.media
@page
media
c
media
c
media
c
media
c
@page.media
@page
c
params
media
c
@page
media
c
params
c
params
c
@resource_id
c
content_partner_id
exit
c
ex
n
params
exit
params
n
exit
params
c
e
c
data[:resource_id]
