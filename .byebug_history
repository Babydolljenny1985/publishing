c
n
predicate
n
options
trait
c
trait
c
n_unit
n_val
c
trait
c
exit
trait[:measurement]
c
options
c
exit
options
c
options
exit
options
c
exit
predicate
n
c
options
c
options
c
exit
options
c
meta
c
n
options
n
options
c
trait
exit
c
n
exit
c
n
res
n
options
c
exit
term_options.is_a?(Hash)
term_options
c
exit
c
predicate
n
term_options
c
supplier
c
supplier
trait
c
page
c
page
e
c
page
trait
c
e
c
e
c
trait
n
c
res
c
exit
res
c
res
c
res
c
res
c
res
c
res = query("MATCH (trait:Trait { resource_pk: #{pk} })-[:supplier]->(res:Resource { resource_id: #{resource_id} }) RETURN trait")
res = query("MATCH (trait:Trait { resource_pk: pk })-[:supplier]->(res:Resource { resource_id: #{resource_id} }) RETURN trait")
res = query("MATCH (trait:Trait { resource_pk: #{quote(pk)} })-[:supplier]->(res:Resource { resource_id: #{resource_id} }) RETURN trait")
res
c
exit
c
res = query("MATCH (trait:Trait { resource_pk: 123 })-[:supplier]->(res:Resource { resource_id: #{resource_id} }) RETURN trait")
res = query("MATCH (trait:Trait { resource_pk: #{quote(pk)} })-[:supplier]->(res:Resource { resource_id: #{resource_id} }) RETURN trait")
res
c
exit
res = query("MATCH (trait:Trait { resource_pk: #{pk} })-[:supplier]->(res:Resource { resource_id: #{resource_id} }) RETURN trait")
res = query("MATCH (trait:Trait { resource_pk: pk })-[:supplier]->(res:Resource { resource_id: #{resource_id} }) RETURN trait")
pk
%Q{"#{pk.gsub(/"/, "\\\"")}"}
pk
pk =~ /\A[-+]?[0-9,]*\.?[0-9]+\Z/
pk
pk.is_a?(Numer
pk.to_a?(numeric)
pk.to_a(numeric)
pk.to_a
pk.to_i
pk
res = query("MATCH (trait:Trait { resource_pk: #{pk.to_i} })-[:supplier]->(res:Resource { resource_id: #{resource_id} }) RETURN trait")
pk
res
c
exit
res["data"].first
res[data].first
res = connection.execute_query("MATCH (trait:Trait { resource_pk: '123' })-[:supplier]->(res:Resource { resource_id: #{resource_id} }) RETURN trait")
res = connection.execute_query("MATCH (trait:Trait { resource_pk: #{quote(pk)} })-[:supplier]->(res:Resource { resource_id: #{resource_id} }) RETURN trait")
res
c
res
c
res
c
n
exit
string.gsub(/"/, "\\\"")
c
exit
quote(pk)
return string if string.is_a?(Numeric) || string =~ /\A[-+]?[0-9,]*\.?[0-9]+\Z/
c
exit
 return string if string.is_a?(Numeric) || string =~ /\A[-+]?[0-9,]*\.?[0-9]+\Z/%Q{"#{string.gsub(/"/, "\\\"")}"}
c
exit
string
c
exit
quote(pk)
res = query("MATCH (trait:Trait { resource_pk: #{pk} })-[:supplier]->(res:Resource { resource_id: #{resource_id} }) RETURN trait.resource_pk")
res = query("MATCH (trait:Trait { resource_pk: '123' })-[:supplier]->(res:Resource { resource_id: #{resource_id} }) RETURN trait.resource_pk")
res = query("MATCH (trait:Trait { resource_pk: "123" })-[:supplier]->(res:Resource { resource_id: #{resource_id} }) RETURN trait.resource_pk")
res = query("MATCH (trait:Trait { resource_pk: #{quote(pk)} })-[:supplier]->(res:Resource { resource_id: #{resource_id} }) RETURN trait.resource_pk")
res
c
res = query('MATCH (trait:Trait { resource_pk: #{quote(pk)} })-[:supplier]->(res:Resource { resource_id: #{resource_id} }) RETURN trait.resource_pk')
c
exit
quote(pk)
pk
res = query("MATCH (trait:Trait { resource_pk: '123' })-[:supplier]->(res:Resource { resource_id: #{resource_id} }) RETURN trait.resource_pk")
res = query("MATCH (trait:Trait { resource_pk: "123" })-[:supplier]->(res:Resource { resource_id: #{resource_id} }) RETURN trait.resource_pk")
res = query("MATCH (trait:Trait { resource_pk: #{quote(pk)} })-[:supplier]->(res:Resource { resource_id: #{resource_id} }) RETURN trait.resource_pk")
c
exit
res = query("MATCH (trait:Trait { resource_pk: "123" })-[:supplier]->(r:Resource { resource_id: #{resource_id} }) RETURN trait.resource_pk")
pk
res = query("MATCH (trait:Trait { resource_pk: '123' })-[:supplier]->(r:Resource { resource_id: #{resource_id} }) RETURN trait.resource_pk")
res = query("MATCH (trait:Trait { resource_pk: '123'} })-[:supplier]->(r:Resource { resource_id: #{resource_id} }) RETURN trait.resource_pk")
'123'.type
w.type
w=quote(pk)
pk
c
exit
pk
res = query("MATCH (trait:Trait { resource_pk: #{quote(pk)} })-[:supplier]->(r:Resource { resource_id: #{resource_id} }) RETURN trait.resource_pk")
res = query("MATCH (trait:Trait { resource_pk: #{pk} })-[:supplier]->(r:Resource { resource_id: #{resource_id} }) RETURN trait.resource_pk")
pk=pk.to_i
pk
resource_id.type
resource_id
pk
res = query("MATCH (trait:Trait { resource_pk: #{quote(pk)} })-[:supplier]->(r:Resource { resource_id: #{resource_id} }) RETURN trait.resource_pk")
res = query("MATCH (trait:Trait { resource_pk: pk })-[:supplier]->(r:Resource { resource_id: #{resource_id} }) RETURN trait.resource_pk")
res = query("MATCH (trait:Trait { resource_pk:pk })-[:supplier]->(r:Resource { resource_id: #{resource_id} }) RETURN trait.resource_pk")
pk.type
pk
res = query("MATCH (trait:Trait { resource_pk: #{pk} })-[:supplier]->(r:Resource { resource_id: #{resource_id} }) RETURN trait.resource_pk")
res = query("MATCH (trait:Trait { resource_pk: pk })-[:supplier]->(r:Resource { resource_id: #{resource_id} }) RETURN trait.resource_pk")
res = query("MATCH (trait:Trait { resource_pk: '123' })-[:supplier]->(r:Resource { resource_id: #{resource_id} }) RETURN trait.resource_pk")
res = query("MATCH (trait:Trait { resource_pk: '123' })-[:supplier]->(res:Resource { resource_id:#{147}}) RETURN trait.resource_pk")
res = query("MATCH (trait:Trait { resource_pk: '123' })-[:supplier]->(res:Resource { resource_id: 147 }) RETURN trait.resource_pk")
res = query("MATCH (trait:Trait { resource_pk: "123" })-[:supplier]->(res:Resource { resource_id: 147 }) RETURN trait.resource_pk")
res = query("MATCH (trait:Trait { resource_pk: 123 })-[:supplier]->(res:Resource { resource_id: 147 }) RETURN trait.resource_pk")
res = query("MATCH (trait:Trait { resource_pk: #{quote(pk)} })-[:supplier]->(r:Resource { resource_id: #{resource_id} }) RETURN trait.resource_pk")
c
exit
res
c
res
trait
c
e
c
res
c
res["data"]
res = query("MATCH (trait:Trait { resource_pk: #{quote(pk)} })-[:supplier]->(res:Resource { resource_id: #{resource_id} }) RETURN trait")
res
c
res
c
res = query("MATCH (trait:Trait { resource_pk: #{quote(pk)} })-[s:supplier]->(res:Resource { resource_id: #{resource_id} }) RETURN s")
res = query("MATCH (trait:Trait { resource_pk: #{quote(pk)} })-[:supplier]->(res:Resource { resource_id: #{resource_id} }) RETURN trait")
quote(pk)
c
res
c
res
c
trait_exists?(resource_id, options[:resource_pk])
c
res
c
res
c
res = query("MATCH (trait:Trait { resource_pk: #{123} })-[:supplier]->(res:Resource { resource_id: #{resource_id} }) RETURN trait")
res = query("MATCH (trait:Trait { resource_pk: #{quote(pk)} })-[:supplier]->(res:Resource { resource_id: #{resource_id} }) RETURN trait")
        "RETURN trait")
        "-[:supplier]->(res:Resource { resource_id: #{resource_id} }) "\
        "MATCH (trait:Trait { resource_pk: #{quote(pk)} })"\
res = query(
pk.blank?
resource_id.blank?
c
n
trait = trait_exists?(resource_id, options[:resource_pk])
c
 trait = trait_exists?(resource_id, options[:resource_pk])
c
e
c
trait = trait_exists?(resource_id, options[:resource_pk])
c
trait = trait_exists?(resource_id, options[:resource_pk])
c
e
c
e
c
