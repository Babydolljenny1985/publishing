c
n
c
options
c
options
c
options
c
params[:scientific_name]
params
c
params[:scientific_name]
params
c
skip
TraitBank.by_trait(2).first
TraitBank.by_trait(1).first
TraitBank.by_trait(1)
params[:id]
c
TraitBank.by_trait(params[:id])
c
params
c
@data
c
trait
c
trait
c
datum_path
'show-path'
trait[:id]
:data
c
trait
c
trait.first
trait
c
trait
c
trait
c
n
hashes.last
hashes.first
hashes
n
m
c
res
res.first
res.length
c
n
@page
n
@resources
n
@resources
n
res
c
@resources
n
c
resources
Hash[ *resources.map { |r| [ r['id'], r ] }.flatten ]
resources
c
TraitBank.resources(@page.data)
@page.data
@resources
n
c
@resources
n
c
n
@resources
n
c
id.gsub("'", "''")
input
c
@data
n
c
n
res
n
id
n
c
ResourceApi.get_resource_using_id(147)
traits
t[:resource_id]
traits.map { |t| t[:resource_id] }
traits.map { |t| t[:resource_id] }.compact.uniq
traits.map { |t| t[:resource_id] }.compact.uniq.first
ResourceApi.get_resource_using_id(traits.map { |t| t[:resource_id] }.compact.uniq.first)
c
@page.media
@page.medium
@page
c
@page.medium
c
show_taxon
page
c
content_partner_id
content_partner_api
c
trait
c
nnnnnnn
nnnnn
n
c
n
e
n
e
n
c
n
c
n
c
n
e
n
c
params
c
params[:resource_id]
c
params["resource_id"]
c
params[:resource_id]
params[:resource_id
c
n
c
ex
rx
n
c
params
c
result
c
n
supplier
n
page
n
resource_id
n
c
@page.referents
@page
c
ref.body.html_safe?
c
ref.body
c
ref.body
c
@page.referents_count
c
@page
c
exit
reference["referenceId"]
c
reference_id
reference["referenceId"]
c
n
reference_id
c
n
c
n
reference_ids
c
name.attribution
name
c
@page.literature_count
@page.referents_count
@page.literatur
@page
c
n
resource_id
c
exit
n
t(:name_recognized_by, by: formatted_names.to_sentence).html_safe
n
content_partner_id
vontent_partner_id
n
str
n
result
n
resource_id
exit
params[:references]
params
exit
n
params[:resource_id]
params
c
res
c
params[:guid]
params
params["guid"]
res
c
res.count
res
exit
c
t("languages.#{lang}")
c
t("languages.#{lang}")
c
t("languages.#{lang}")
c
t("languages.#{lang}")
c
t("languages.#{lang}")
names[lang]
names_by_lang
exit
names_by_lang.group_by
string
c
names_by_lang
str
formatted_names.to_sentence
formatted_names
c
@page.scientific_names
@page.scientific_names.group_by { |n| n.taxonomic_status.name }.each do |status, scientific_names|
- @page.scientific_names.group_by { |n| n.taxonomic_status.name }.each do |status, scientific_names|
c
