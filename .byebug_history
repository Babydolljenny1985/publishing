c
@resource
c
result
n
c
n
resource_id
n
response_scheduler
n
c
result
n
c
result
n
c
result
n
params
c
result
n
result
n
@resource.valid?
c
n
result
n
result
n
@resource.valid?
@resource.valid
@resource
c
params
c
params
c
params
c
stub_request(post :create, content_partner_id: 1)
stub_request(post :create, content_partner_id: 1).to_return(status: 200)
c
stub_request(post :create, resource: FactoryGirl.attributes_for(:resource , :valid_url) ,content_partner_id: 1).to_return(id: 1) 
stub_const(post :create, resource: FactoryGirl.attributes_for(:resource , :valid_url) ,content_partner_id: 1).to_return(id: 1) 
c
stub_request(post :create, content_partner_id: 1 , resource: FactoryGirl.attributes_for(:resource , :valid_url))
stub_const(post :create, content_partner_id: 1 , resource: FactoryGirl.attributes_for(:resource , :valid_url))
stub_const(post :create, content_partner_id: 1 )
stub_const(post :create, content_partner_id: 1 , resource: FactoryGirl.attributes_for(:resource , :valid_url)).to_return(id: 1)
stub_request(post :create, content_partner_id: 1 , resource: FactoryGirl.attributes_for(:resource , :valid_url)).to_return(id: 1)
c
stub_request(post :create, content_partner_id: 1).with(resource: FactoryGirl.attributes_for(:resource , :valid_url))
stub_request(post :create, content_partner_id: 1).to_return(id: 1)
stub_request(post :create, content_partner_id: 1).with(resource: FactoryGirl.attributes_for(:resource , :valid_url)).to_return(id: 1)
stub_request(post :create, content_partner_id: 1).with(body: FactoryGirl.attributes_for(:resource , :valid_url)).to_return(id: 1)
c
stub_request(post :create, content_partner_id: 1)
stub_request(post :create)
stub_request(post :create, content_partner_id: 1)
stub_request(post :create, content_partner_id: 1).with(resource: FactoryGirl.attributes_for(:resource , :valid_url)).to_return(id: 1) 
c
@content_partner
@content_partner.valid?
c
n
FactoryGirl.attributes_for(:content_partner , :invalid) 
content_partner
c
resource_params
c
resource_params
c
flash.now
flas.now
flash
flash[:alert]
flash[:error]
flash[:notice]
c
p put :update , resource: FactoryGirl.attributes_for(:resource , :invalid) , content_partner_id: 1, resource_id: 1
c
resource_id
c
resource_id
c
params[default_language_id]=nil
params.default_language_id=1
params
c
response_scheduler
c
n
resource_id
e
c
params
c
resource= FactoryGirl.attributes_for(:resource)
resource: FactoryGirl.attributes_for(:resource)
c
n
c
resource= FactoryGirl.build(:resource)
:resource => FactoryGirl.create(:resource)
resource= FactoryGirl.create(:resource)
resource: FactoryGirl.create(:resource)
c
resource: FactoryGirl.create(:resource)
c
resource: FactoryGirl.build(:resource)
c
params[:resource]
params
c
resource: FactoryGirl.build(:resource)
resource
c
params
resource_params
resource
c
n
c
resource
n
c
n
 resource 
c
resource: FactoryGirl.build(:resource)
c
params
n
c
n
params
resource_params
n
c
params
n
c
post :create , resource_params =FactoryGirl.build(:resource) , content_partner_id: 1 
post :create , resource_params , content_partner_id: 1 
resource_params
c
resource
resource =FactoryGirl.build(:resource)
  post :create , content_partner_id: 1 ,resource_params: FactoryGirl.build(:resource)
c
resource
:resource
 resource_params
c
e
resource_params: FactoryGirl.build(:resource)
resource_params :FactoryGirl.build(:resource)
resource_params: :FactoryGirl.build(:resource)
resource_params: FactoryGirl.build(:resource)
c
n
c
resource_params
n
c
resource_params
c
@resource.errors
e.messages
@resource.valid?
@resource
c
e
c
e
c
e
c
e
response
c
e
response
logo_response
c
e
c
e
c
e
response
response_update
c
logo_response
response
e
c
e
c
e.message
c
e
c
logo
logo_response
c
e
c
logo
logo_response
c
logo
logo_response
c
logo
logo.read
logo.open
logo.read
input_logo.size
logo_input.size
logo.size
e
c
logo
e
c
e
c
input_logo
logo_input
e
c
input_logo
logo_response
e.message
e
c
e.message
c
logo_response
e.message
c
logo
e.message
logo_response
c
e
c
resource_data_set_file
response_storage
c
resource_data_set_file
