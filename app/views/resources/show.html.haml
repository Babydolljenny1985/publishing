%h1= @resource.name
.ui.button= link_to(t("resources.actions.index"), resources_path)

%h2
  Sample pages

With media:
- if (contn = PageContent.where(resource_id: @resource.id).first)
  = link_to_page_by_name(contn.source_page)
- else
  (none)
%br
With synonyms:
- if (name = ScientificName.where(resource_id: @resource.id, is_preferred: false).first)
  = link_to_page_by_name(name.node.page)
- else
  (none)
%br
With vernaculars:
- if (name = Vernacular.where(resource_id: @resource.id).first)
  = link_to_page_by_name(name.node.page)
- else
  (none)
%br
With traits:
- if (page_ids = TraitBank.first_pages_for_resource(@resource.id))
  - if page_ids.empty?
    (none)
  - else
    - pages = Page.where(id: page_ids)
    - if pages.empty?
      = "It claims to have pages #{page_ids.sort.to_sentence}, but they don't appear to exist."
    - else
      = link_to_page_by_name(pages.first)
- else
  (none)

- if @resource.import_logs.empty?
  This resource has not been imported yet.
- else
  %h2 Content
  .uk-section.uk-section-small
    %ul#page_nav.uk-grid-large{ class: 'uk-child-width-1-2@s uk-child-width-1-6@m', uk: { grid: true } }
      %li
        - index_stat(:nodes, @resource.nodes_count)
      %li
        - index_stat(:media, Medium.where(resource_id: @resource.id).count)
      %li
        - index_stat(:data, TraitBank.resource_count(@resource.id))
      %li
        - index_stat(:scientific_names, ScientificName.where(resource_id: @resource.id).count)

  %h2
    Imports:
  %ul.uk-list
    - @resource.import_logs.order('created_at DESC').each do |log|
      %li
        %b= link_to(l(log.created_at, format: :long), [@resource, log])
        - if log.completed_at
          %b= "Completed:"
          = l(log.completed_at, format: '%H:%M:%S.%3N')
        - elsif log.failed_at
          %b= "Failed:"
          = l(log.failed_at, format: '%H:%M:%S.%3N')
        %b= "Status:"
        - if log.status
          = log.status
        - else
          = "unknown"
