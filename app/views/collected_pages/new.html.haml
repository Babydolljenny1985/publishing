#collected_page.container
  - if image = @collected_page.medium_icon_url # || @page.icon
    .collect-image
      = image_tag(image, size: "130x130")
  - if @wants_icon
    %h2.clearfix= t(:collect_icon_title, item: @collected_page.medium.name, page: @page.name(Language.current)).html_safe
  - else
    %h2.clearfix= t(:collect_title, item: @page.name(Language.current).html_safe)
  .uk-grid{ uk: { grid: true } }
    .uk-width-1-2
      %h3= t(:collect_new_collection_title)
      -# TODO: use simple_form
      = form_for(@collection, html: { class: "uk-form-stacked" }) do |f|
        %div
          = f.label(:name, class: "uk-form-label")
          = f.text_field(:name, class: "uk-input", placeholder: t(:collect_new_collection))
        %div
          = f.fields_for :collected_pages do |page_f|
            - @collection.collected_pages.each do |collected_page|
              = page_f.hidden_field(:page_id, page_id: collected_page.page_id)
              - if @wants_icon
                = page_f.fields_for(:collected_pages_media) do |cpm_fields|
                  - collected_page.collected_pages_media.each do |medium|
                    = cpm_fields.hidden_field(:medium_id, medium_id: medium.id)
        .uk-text-center.uk-margin-medium
          = f.submit(t(:button_create), class: "uk-button uk-button-default")
    .uk-width-1-2
      %h3= t(:collect_select_collection)
      - if current_user.collections.empty?
        %p= t(:collect_no_existing_collections)
      - else
        = form_for(@collected_page, html: { class: "form" }) do |f|
          = f.hidden_field(:page_id, page_id: @collected_page.page_id)
          - if @wants_icon
            = f.fields_for(:collected_pages_media) do |cpm_fields|
              - @collected_page.collected_pages_media.each do |medium|
                = cpm_fields.hidden_field(:medium_id, medium_id: medium.id)
          - now = Time.now
          - current_user.collections.sort_by { |c| [now - (c.updated_at || 10.years.ago), c.name] }.each do |collection|
            - included = @bad_collection_ids.include?(collection.id)
            - disable = (! @wants_icon) && included
            .radio{ class: disable ? "disabled" : nil }
              = f.radio_button(:collection_id, collection.id, disabled: disable)
              = f.label(:collection_id, link_to(collection.name, collection))
              - if disable
                %span.disabled.danger= t(:collect_already_in_collection)
              - elsif included
                %span.disabled.danger= t(:collect_already_in_collection_will_add_icon, page: @page.name(Language.current))

          = f.submit(t(:button_add), class: "btn btn-default")
