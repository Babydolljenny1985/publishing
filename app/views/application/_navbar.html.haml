.l-nav
  .nav-left
    .nav-item.nav-menu-anchor
      = link_to(image_tag('blue_logo.png', alt: 'EOL'), '/', class: 'nav-logo')
      %span &nbsp;
      %i.fa.fa-chevron-down
      %ul.nav-menu
        %li= link_to(t("nav.about"), '/docs/about')
        %li= link_to(t("nav.education"), 'http://education.eol.org/')
        %li= link_to(t("nav.discuss"), 'http://discuss.eol.org/t/eolv3-beta-test/122')
        - if current_user
          %li= link_to(current_user.username, main_app.user_path(current_user))
          %li= link_to(t(:layout_sign_out), main_app.destroy_user_session_path)
        - else
          %li= link_to(t(:layout_sign_in), main_app.new_user_session_path)
          %li= link_to(t(:layout_sign_up), main_app.new_user_registration_path)
    -#
  .nav-right
    - if !(current_page?(search_path) || current_page?(search_form_path))
      = link_to search_form_path, :class => 'nav-item nav-search-icon' do 
        %i.fa.fa-search.fa-2x
    .nav-eol-txt
      .nav-eol-title= t("landing_page.title")
      .nav-eol-desc= t("landing_page.header")
-#
  - inverted = defined?(invert) ? 'inverted' : nil
  .ui.tiny.menu{ class: inverted }
    #navbar.ui.container
      -# TODO: I18n
      = link_to(image_tag('blue_logo.png', alt: 'EOL'), '/', class: 'ui item mini image')
      -# HACK HACK HACK - I need to "inject" content into the menu to make it
      -# appear!
      -# = cms_menu.to_html.gsub(/<ul/, "#{t("nav.cms.menu_name")}<i class='dropdown icon'></i><ul").html_safe
      -#= cms_menu.to_html.gsub(/(?<=.)<div/, %Q{<a class="ui basic button" type="button" href="#" aria-expanded="false">#{t("nav.cms.menu_name")}</a><div}).gsub(/uk-dropdown-bottom-left"/, %Q{uk-dropdown-bottom-left" uk-dropdown}).html_safe
      = link_to(t("nav.about"), '/docs/about', class: 'item uk-visible@m')
      = link_to(t("nav.education"), 'http://education.eol.org/', class: 'item uk-visible@m')
      = link_to(t("nav.discuss"), 'http://discuss.eol.org/t/eolv3-beta-test/122', class: 'item uk-visible@m')
      -# .ui.simple.dropdown.item{class: "uk-visible@m" }
      -#   - langs = languages_hash
      -#   - keys = langs.keys
      -#   - keys.delete_at(keys.index(I18n.locale))
      -#   - button_text = langs[I18n.locale] || "Language"
      -#   = link_to(button_text, "#", class: "ui basic button #{inverted}", type: "button")
      -#   .uk-list.uk-padding-small{ uk: { dropdown: true } }
      -#     - keys.each do |key|
      -#       -# NOTE the stupid check for test env here. Yuck.
      -#       %li= link_to(langs[key], Rails.env.test? ? "/" : { lang: key })
      - unless inverted
        #nav-search.ui.item
          = form_tag(main_app.search_path, method: "get", autocomplete: "off") do |f|
            .ui.names.search
              .ui.icon.input
                = text_field_tag("q", nil, class: "prompt", size: 16, placeholder: t("nav.search.placeholder"))
                %i.search.icon
      - if current_user
        .item= link_to(current_user.username, main_app.user_path(current_user))
        .item{ class: "uk-visible@m" }= link_to(t(:layout_sign_out), main_app.destroy_user_session_path)
      - else
        .item= link_to(t(:layout_sign_in), main_app.new_user_session_path)
        .item{ class: "uk-visible@m" }= link_to(t(:layout_sign_up), main_app.new_user_registration_path)


