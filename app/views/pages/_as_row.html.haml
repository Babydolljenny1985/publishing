- icon ||= page.icon
- common ||= page.name
- show_delete = defined?(collected_page) ? policy(collected_page.collection).update? : nil
- scientific ||= page.scientific_name
- has_query = defined?(@q) && ! @q.blank?
- matches_scientific = has_query && scientific =~ /#{@q}/
- matches_common = has_query && common =~ /#{@q}/
- media = (defined?(media) && media && ! media.empty?) ? media.compact.delete_if { |m| m.medium_icon_url == icon }.uniq : []
%li.uk-card.uk-card-hover.eol-bright.uk-box-shadow-small
  .uk-card-body.uk-grid-small{ uk: { grid: true } }
    - if icon
      .eol-width-medium-icon
        %a{ href: page_path(page) }
          = image_tag(icon, class: "ui small image fluid")
    .uk-width-expand
      .page-ancestors
        %ul.uk-breadcrumb.uk-heading-divider.eol-padding-tiny
          - ancestors = page.native_node.try(:ancestors)
          - if ancestors
            - shown_ellipsis = false
            - ancestors.each do |node|
              - unless node.has_breadcrumb?
                - unless shown_ellipsis
                  &nbsp;â€¦
                  - shown_ellipsis = true
                - next
              %li= link_to(node.canonical_form.html_safe, node.page_id ? page_path(node.page_id) : "#")
              - shown_ellipsis = false
          - else
            = t("pages.native_node_missing_warning")
      - if is_admin?
        .uk-float-right.uk-text-muted.eol-text-tiny
          - if page.page_richness.nil?
            -# NOTE: yes, I want this hard-coded, not translated. It's a DB value.
            nil
          - else
            = page.page_richness / 100.0
      - if show_delete
        .uk-float-right.uk-margin
          = link_to(t("collected_pages.delete_button"), collected_page, method: "delete", data: { confirm: t("collected_pages.delete_confirm") }, class: "ui basic tiny button")
      .names.d-inline
        - sci_name = has_query ? emphasize_match(scientific, @q) : scientific.html_safe
        -# Because these can be JSON results, we can't link to the model
        -# directly: (e.g. link_to(:foo, page) <-- won't work)
        - page_link = page_path(page.id)
        - if common.blank?
          .uk-text-large= link_to(sci_name, page_link, class: "primary-name")
        - else
          .uk-text-large
            - if has_query
              = link_to(emphasize_match(common.titleize, @q), page_link, class: "primary-name")
            - else
              = link_to(common.titleize.html_safe, page_link, class: "primary-name")
          .uk-text-muted= link_to(sci_name, page_link, class: "secondary-name")
      - if defined?(annotation)
        .uk-margin-small-top
          = annotation
      - if has_query
        .matches.uk-margin-small-top
          - other_vernaculars = nil
          - other_scientifics = nil
          - other_resources = nil
          - unless matches_common
            - other_vernaculars = page.respond_to?(:vernaculars) ? vernacular_names(page) : page.vernacular_strings.map { |vs| emphasize_match(vs, @q)}
            - unless other_vernaculars.blank?
              %b= t("search_results.field_matches.vernaculars", count: other_vernaculars.size)
              = other_vernaculars.join(", ").html_safe
          -# TODO finish converting this to their highlights...  argh
          -# - unless matches_common
          -#   - other_scientifics =  page.scientific_names.select { |pv| pv.canonical_form != page.scientific_name && pv.canonical_form =~ /#{@q}/i }.map { |name| emphasize_match(name.canonical_form, @q) }
          -#   - unless other_scientifics.blank?
          -#     %b= t("search_results.field_matches.synonyms", count: other_scientifics.size)
          -#     = other_scientifics.join(", ").html_safe
          -# - other_resources = page.respond_to?(:resources) ? resource_names(page) : page.providers.map { |resource| emphasize_match(resource, @q) }
          -# - unless other_resources.blank?
          -#   %b= t("search_results.field_matches.resources", count: other_resources.size)
          -#   = other_resources.join(", ").html_safe
          -# - if other_vernaculars.blank? && other_scientifics.blank? && other_resources.blank?
          -#   - if summary = construct_summary(page)
          -#     .uk-margin-small-top= summary

      - else # (no query string)
        - if summary = construct_summary(page)
          .uk-margin-small-top= summary
      - unless media.empty?
        .uk-card.uk-card-default.eol-section-aged.uk-padding-small.uk-margin-small-left.uk-margin-small-top
          %h5.uk-text-center= t("search_results.collected_media.title")
          .uk-grid.uk-child-width-expand{ uk: { grid: true } }
            - media.uniq.each do |medium|
              .child
                = link_to(image_tag(medium.small_icon_url, class: "img-responsive", size: "88x88"), medium)
