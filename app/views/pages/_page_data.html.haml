- cache(page_data_path(@page), expires_in: 1.day) do 
  %ul.traits
    - @page.predicates.each_with_index do |uri, index|
      - predicate = @page.glossary[uri]
      - if predicate.nil?
        - Rails.logger.error("** ERROR: missing predicate #{uri}")
        - next
      - previous_predicate = nil
      - @page.grouped_data[uri].each do |trait|
        %li.trait
          .trait-source= show_source_segment(trait)
          .trait-pred= link_to(predicate[:name], term_path(:uri => predicate[:uri]))
          .trait-val= show_data_value(trait)
          - modifier_content = modifier_txt(trait)
          - if modifier_content
            .trait-mod= modifier_txt(trait)
          - if trait[:metadata] && trait[:metadata].any? 
            %i.fa.fa-angle-down.fa-2x.meta-items-arw.js-meta-arw
            %ul.meta-items.is-hidden.js-meta-items
              - trait[:metadata].each do |datum|
                %li.meta-item
                  .meta-pred
                    - if datum[:predicate][:uri]
                      = link_to(datum[:predicate][:name], term_path(:uri => predicate[:uri]))
                    - else
                      = datum[:predicate][:name]
                  .meta-val= show_data_value(datum)


  -# todo: move caching to controller if possible
  -#
    - Rails.logger.warn("// Rendering data for page #{@page.id} (#{@page.name})")
    - @resources = TraitBank.resources(@page.data)
    - build_associations(@page)
    - max_rows = 10
    - data = @page.data
    #page_data{ uk: { grid: true } }
      .uk-width-1-5{ class: "uk-visible@m" }
        #section_links.ui.small.fluid.vertical.secondary.pointing.menu
          .active.item
            -# TODO: these links should probably be "real" for those without JS.
            = link_to(t(:page_data_toc_all_items), "#", data: { section_id: "all" })
          - @page.data_toc.each do |section|
            .item
              = link_to(t("sections.#{section.name}"), "#", data: { section_id: section.id })
          - if @page.data_toc_needs_other?
            .item
              = link_to(t(:page_data_toc_other), "#", data: { section_id: "other" })
          .item
            = link_to(t(:page_data_toc_type_glossary), "#", data: { section_id: "type_glossary" })
          .item
            = link_to(t(:page_data_toc_value_glossary), "#", data: { section_id: "value_glossary" })
      .uk-width-expand.uk-overflow-auto
        #data.data_by_page.uk-text-small
          -# TODO: helper
          - @page.predicates.each_with_index do |uri, index|
            - predicate = @page.glossary[uri]
            - if predicate.nil?
              - Rails.logger.error("** ERROR: missing predicate #{uri}")
              - next
            - previous_predicate = nil
            - @page.grouped_data[uri].each do |trait|
              .row
                -# TODO: I'm not happy with storing the ids of sections as a string in TraitBank. Should have helper. :S
                - sections = predicate[:section_ids]&.split(",")&.map { |i| "section_#{i}" } || []
                - sections = ["section_other"] if sections.empty?
                .uk-float-right.uk-text-center.meta_data_toggle{ class: "uk-width-1-5@m uk-width-1-6 ", data: { action: datum_path(trait[:id]) } }
                  - if index == 0
                    %div{ class: "uk-hidden@m" }
                      = t("page_data.source_column_header").html_safe
                  %i.icon.chevron.down.uk-margin-large-top
                .ui.segments{ class: "uk-width-4-5@m uk-width-5-6 " + sections.join(" ") }
                  .ui.segment.eol-padding-tiny
                    = link_to(predicate[:name], term_path(uri: predicate[:uri]))
                    - previous_predicate = predicate
                    %div{ class: "uk-visible@m" }
                      - show_data_modifiers(trait)
                  .ui.secondary.segment.uk-text-center.eol-padding-tiny
                    - show_data_value(trait)
                    %div{ class: "uk-hidden@m" }
                      - show_data_modifiers(trait)
                  - show_source_segment(trait)
                - metadata_container(trait)
        #data_type_glossary.uk-margin-large-bottom
          %h3= t(:data_header_type_glossary)
          .uk-column-1-2
            %dl.uk-description-list
              - @page.predicates.sort_by { |p| @page.glossary[p][:name]&.downcase }.compact.each do |predicate|
                - term = @page.glossary[predicate]
                - next if term[:is_hidden_from_glossary]
                %dt= link_to(term[:name], term_path(uri: term[:uri]))
                %dd
                  .uk-text-muted.uk-text-small= term[:uri]
                  = term[:definition]
                  .uk-text-muted= term[:attribution]
        #data_value_glossary.uk-margin-large-bottom
          %h3= t(:data_header_value_glossary)
          .uk-column-1-2
            %dl.uk-description-list
              - @page.object_terms.sort_by { |t| @page.glossary[t][:name]&.downcase }.each do |name|
                - term = @page.glossary[name]
                - next if term[:is_hidden_from_glossary]
                %dt= link_to(term[:name], term_path(uri: term[:uri], object: true))
                %dd
                  .uk-text-muted.uk-text-small= term[:uri]
                  = term[:definition]
                  .uk-text-muted= term[:attribution]
