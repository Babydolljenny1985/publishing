-# NOTE: preventing defaults in this view makes is rather complicated, but is
-# not all that computationally expensive and is worth the effort. TODO: it
-# would be better to clean this up with helpers, and make it clear again.
%h2= t(:scientific_names_header)
.ui.grid.container
  - @page.scientific_names.group_by { |n| n.taxonomic_status.name }.each do |status, scientific_names|
    .four.wide.column
      .ui.raised.top.attached.segment.secondary
        %h3.ui.header= t("scientific_name.status_title.#{status}")
      .ui.raised.attached.segment
        .ui.list.middle.aligned.relaxed.divided
          - scientific_names.sort.group_by { |n| n.italicized }.each do |string, names|
            .item
              .header= string.html_safe
              - names.each do |name|
                .description= t(:name_recognized_by, by: link_to(name.node.resource.name, name.node.resource)).html_safe
%h2= t(:vernacular_names_header)
.ui.grid.container
  - @page.vernaculars.group_by { |n| n.language.group }.each do |lang, names_by_lang|
    .four.wide.column
      .ui.raised.top.attached.segment.secondary
        %h3.ui.header= t("languages.#{lang}")
      .ui.raised.attached.segment
        .ui.list.middle.aligned.relaxed.divided
          - names_by_lang.group_by { |n| n.string }.each do |string, names_by_string|
            .item
              - preferred_name = names_by_string.any? { |n| n.is_preferred? }
              .header
                = string
                - if preferred_name
                  .ui.label= t(:name_preferred_label)
              - names_by_string.group_by { |n| n.node.resource }.each do |resource, names_by_resource|
                - str = resource.name
                - if names_by_resource.any? { |n| n.is_preferred_by_resource and not preferred_name }
                  - str = t(:vernacular_preferred_by_resource, resource: str)
                .description= t(:name_recognized_by, by: link_to(str, resource)).html_safe
