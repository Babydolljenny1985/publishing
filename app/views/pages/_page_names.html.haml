-# NOTE: preventing defaults in this view makes is rather complicated, but is
-# not all that computationally expensive and is worth the effort. TODO: it
-# would be better to clean this up with helpers, and make it clear again.

%h2= t(:scientific_names_header)
%div.uk-grid-small.uk-child-width-1-3{ uk: { grid: true }, class: "uk-child-width-expand@s" }
  - @page.scientific_names.group_by { |n| n.taxonomic_status.name }.each do |status, scientific_names|
    %div
      .uk-card.uk-card-default
        .uk-card-header
          %h3.uk-card-title= t("scientific_name.status_title.#{status}")
        .uk-card-body
          %dl.uk-description-list.uk-description-list-divider
            - scientific_names.sort.group_by { |n| n.italicized }.each do |string, names|
              %dt= string.html_safe
              %dd.uk-text-meta
                - formatted_names = []
                -resource_id = names.first.resource_id
                -if resource_id
                  -result = ResourceApi.get_resource_using_id(resource_id)
                -# - names.map { |n| n.node.try(:resource) }.compact.uniq.each do |resource|
                  - content_partner_id=ResourceApi.get_content_partnerid_using_resourceid(resource_id)
                  - formatted_names << link_to(result["name"], content_partner_resource_path(content_partner_id["id"], result["id"]))
                = t(:name_recognized_by, by: formatted_names.to_sentence).html_safe
%h2= t(:vernacular_names_header)
.uk-grid-small.uk-child-width-1-3{ uk: { grid: true } }
  - if @page.vernaculars.empty?
    %div
      .uk-card.uk-card-default
        .uk-card-body= t(:page_vernaculars_empty)
  - else
    - all_names = @page.vernaculars.group_by { |n| n.language.group }
    - all_names.keys.sort_by { |l| tl = t("languages.#{l}") ; tl == 0 ? l : tl }.each do |lang|
      - names_by_lang = all_names[lang]
      %div
        .uk-card.uk-card-default
          .uk-card-header
            %h3.uk-card-title= t("languages.#{lang}")
          .uk-card-body
            %dl.uk-description-list.uk-description-list-divider
              - names_by_lang.group_by { |n| n.string }.each do |string, names_by_string|
                - preferred_name = names_by_string.any? { |n| n.is_preferred? }
                %dt
                  = string
                  - if preferred_name
                    %span.uk-label.uk-label-primary.uk-float-right.uk-margin-left= t(:name_preferred_label)
                  - elsif is_admin?
                    -# TODO: admin OR curator...
                    .uk-float-right
                      = link_to(t("names.prefer"), prefer_vernacular_path(names_by_string.first))
                %dd.uk-text-meta
                  - formatted_names = []
                  -# - names_by_string.group_by { |n| n.node.resource }.each do |resource, names_by_resource|
                  -# - names_by_string.map { |n| n.node.try(:resource) }.compact.uniq.each do |resource, names_by_resource|
                  - resource_id = names_by_string.first.resource_id
                  -if resource_id
                    -result = ResourceApi.get_resource_using_id(resource_id)
                    - str = result["name"]
                    - if names_by_string.any? { |n| n.is_preferred_by_resource and not preferred_name }
                      = t(:vernacular_preferred_by_resource, resource: str)
                    - content_partner_id=ResourceApi.get_content_partnerid_using_resourceid(resource_id)
                    - formatted_names << link_to(result["name"], content_partner_resource_path(content_partner_id["id"], result["id"]))
                  = t(:name_recognized_by, by: formatted_names.to_sentence).html_safe
