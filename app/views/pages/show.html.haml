- if @page.occurrence_map?
  - content_for :head do
    - prefix = @page.id.to_i % 100
    = javascript_include_tag "http://maps.google.com/maps/api/js?key=#{Rails.application.secrets.google_maps_key}"
    = javascript_include_tag "maps_vendored"
    = javascript_include_tag "http://media.eol.org/content/maps/#{prefix}/#{@page.id}.json"
    = javascript_include_tag "maps"
#page.container{"data-turbolinks": "false"}
  #page_control{ ng: { controller: "PageCtrl as ctrl" } }
    -# NOTE: it doesn't cache this, so we store it rather than call it over
    -# and over:
    - ancestors = @page.native_node.ancestors
    #breadcrumbs.page-ancestors.ui.breadcrumb
      - shown_ellipsis = false
      - ancestors.each do |node|
        - unless node.has_breadcrumb?
          - unless shown_ellipsis
            = link_to("â€¦", page_breadcrumbs_path(page_id: @page.id), class: "section", remote: true)
            %i.right.chevron.icon.divider
            - shown_ellipsis = true
          - next
        = link_to(node.canonical_form.html_safe, node.page_id ? page_path(node.page_id) : "#", class: "section")
        - shown_ellipsis = false
        - unless node == ancestors.last
          %i.right.chevron.icon.divider
    .row
      .page-names.col-md-9
        %h1= @page.name.titlecase
        %h2= @page.scientific_name.html_safe
        - trophic_strat = begin
          - @page.traits.find { |t| t[:predicate][:uri] == "http://www.wikidata.org/entity/Q1053008" }[:object_term][:name]
        - rescue => e
          -# Do nothing. This code doesn't even belong here. I'm rushing.
        -# TODO: this is all temporary! We need a real solution:
        %p
          = "The #{@page.name} is a(n) #{trophic_strat} #{ancestors[0].name} "
          - if ancestors[-2]
            = "in the #{ancestors[-2].rank.try(:name) || "clade"} #{ancestors[-2].name}."
          It lives in a variety of habitats around the world.
      %p.col-md-3.actions
        = link_to t(:taxon_collect_button), new_collected_page_path(page_id: @page.id), class: "btn btn-default"
    .media
      #gallery
        %h2= t(:page_media_header, count: @page.media_count)
        = render("page_media")

    #page_nav.ui.secondary.pointing.menu
      - if @page.traits
        = link_to(t("pages.tabs.traits", count: @page.traits.size).html_safe, page_traits_path(page_id: @page.id), class: "active item", id: "page_nav_traits", remote: true)
      - if @page.map?
        -# TODO: We want a real count there, eventually.
          = link_to(t("pages.tabs.maps", count: 1).html_safe, page_maps_path(page_id: @page.id), class: "item", id: "page_nav_maps", remote: true)
      = link_to(t("pages.tabs.classifications").html_safe, page_classifications_path(page_id: @page.id), class: "item", id: "page_nav_classifications", remote: true)
      - if @page.articles.size > 1
        = link_to(t("pages.tabs.details", count: @page.articles.size).html_safe, page_details_path(page_id: @page.id), class: "item", id: "page_nav_details", remote: true)
      = link_to(t("pages.tabs.names", count: @page.names_count).html_safe, page_names_path(page_id: @page.id), class: "item", id: "page_nav_names", remote: true)
      - if @page.literature_and_references_count > 1
        = link_to(t("pages.tabs.literature_and_references", count: @page.literature_and_references_count).html_safe, page_literature_and_references_path(page_id: @page.id), class: "item", id: "page_nav_literature_and_references", remote: true)
    #page_nav_content.ui.segment
      = render("page_traits")
