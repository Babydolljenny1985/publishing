#page.container{ ng: { app: "pageApp" } }
  #page_control{ ng: { controller: "PageCtrl as ctrl" } }
    .jumbotron
      .ancestors
        %ol.breadcrumb
          - @page.native_node.ancestors.each do |node|
            %li.breadcrumb-item= link_to(node.canonical_form.html_safe, node.page_id ? page_path(node.page_id) : "#")
      %h1= @page.name.string.titlecase
      %p= @page.scientific_name.html_safe
      %p
        %button.btn.btn-secondary
          = link_to(t(:taxon_collect_button), new_collection_item_path(item_type: "Page", item_id: @page.id))
    - max_rows = 6
    - traits = @page.traits
    - any_collapsed = false
    - if ! traits.empty?
      - row_count = 0
      - grouped_traits = traits.group_by { |t| t[:predicate] }
      - any_collapsed = traits.size > max_rows + 1
      %table.traits_by_page.table.table-hover.table-condensed.table-bordered.table-striped
        %tbody
          -# TODO: helper
          - grouped_traits.keys.sort { |a,b| @page.glossary[a].try(:name).downcase <=> @page.glossary[b].try(:name).downcase }.each do |uri|
            - predicate = @page.glossary[uri]
            - previous_predicate = nil
            - TraitBank.sort(grouped_traits[uri], @page.glossary).each do |trait|
              - collapse = row_count > max_rows && any_collapsed
              - any_collapsed = true if collapse
              %tr{ collapse: collapse ? "traitsCollapsed" : nil, ng: { hide: collapse ? "traitsCollapsed" : nil } }
                - row_count += 1
                %th{ scope: "row" }
                  - if predicate == previous_predicate
                  - else
                    = link_to(predicate.name, trait_path(predicate))
                    - previous_predicate = predicate
                %td
                  - if trait[:measurement]
                    = trait[:measurement]
                    = @page.glossary[trait[:units]].try(:name) || trait[:units]
                  - elsif trait[:term]
                    = @page.glossary[trait[:term]].try(:name) || trait[:term]
                  - elsif trait[:literal]
                    = trait[:literal].html_safe
                  - else
                    Augh! Could not find a displayable value from keys of:
                    = trait.keys.join(", ")
                -# TODO: make this a proper link
                %td.table-source
                  - if resource = @resources[trait[:resource_id]]
                    = link_to(resource.name, "#", title: resource.name, data: { toggle: "tooltip", placement: "left" } )
                  - else
                    t(:resource_missing)
      - if any_collapsed
        %p
          %button{ type: "button", class: "btn btn-default", ng: { init: "traitsCollapsed = true", click: "traitsCollapsed = !traitsCollapsed" } }
            = t(:traits_show_more, count: row_count - max_rows)
    .well
      .galleria
        - @page.images.each do |image|
          -# TODO: we will eventually know the actual size of the image; add that:
          = link_to(image_tag(image.small_icon_url, alt: image.name.html_safe, data: { layer: "<div class=\"galleria__credits\">#{image.license.name} #{image.owner.html_safe}</div>", big: image.original_size_url }), image.large_size_url)
    :javascript
      Galleria.loadTheme('/assets/galleria/themes/classic/galleria.classic.min.js');
      Galleria.run('.galleria');

    .well
      %tabset{ justified: "true", type: "pills" }
        - article = @page.top_articles.first
        - if article
          %tab{ heading: "Overview" }
            - name = article.name.html_safe
            - name = article.sections.first.name if name.blank? || name.empty?
            .article
              %h3= name
              = article.body.html_safe
              = article.license.name
              = article.owner.html_safe
        %tab{ heading: "Maps (todo)" }
        %tab{ heading: "Classification (todo)" }
        %tab{ heading: "Details (todo)" }
        %tab{ heading: "Names (todo)" }
        %tab{ heading: "References & Literature (todo)" }
        %tab{ heading: "Education (todo)" }
