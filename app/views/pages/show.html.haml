#page.container{"data-turbolinks": "false"}
  #page_control{ ng: { controller: "PageCtrl as ctrl" } }
    .well
      -# NOTE: it doesn't cache this, so we store it rather than call it over
      -# and over:
      - ancestors = @page.native_node.ancestors
      .page-ancestors
        %ol.breadcrumb
          - ancestors.each do |node|
            %li.breadcrumb-item= link_to(node.canonical_form.html_safe, node.page_id ? page_path(node.page_id) : "#")
      .row
        .page-names.col-md-9
          %h1= @page.name.titlecase
          %h2= @page.scientific_name.html_safe
          - trophic_strat = begin
            - @page.traits.find { |t| t[:predicate][:uri] == "http://www.wikidata.org/entity/Q1053008" }[:object_term][:name]
          - rescue => e
            -# Do nothing. This code doesn't even belong here. I'm rushing.
          -# TODO: this is all temporary! We need a real solution:
          %p
            = "The #{@page.name} is a(n) #{trophic_strat} #{ancestors[0].name} "
            - if ancestors[-2]
              = "in the #{ancestors[-2].rank.try(:name) || "clade"} #{ancestors[-2].name}."
            It lives in a variety of habitats around the world.
        %p.col-md-3.actions
          = link_to t(:taxon_collect_button), new_collected_page_path(page_id: @page.id), class: "btn btn-default"
      .media
        #gallery
          %h2= t(:page_media_header, count: @page.media_count)
          = render("page_media")
      %ul#page_nav.nav.nav-pills
        - if @page.traits
          %li#page_nav_traits.active{ role: "presentation" }
            = link_to(t("pages.tabs.traits", count: @page.traits.size).html_safe, page_traits_path(page_id: @page.id), remote: true)
        - if @page.article
          %li#page_nav_article{ role: "presentation" }
            = link_to(t("pages.tabs.article").html_safe, page_article_path(page_id: @page.id), remote: true)
        - if @page.map?
          %li#page_nav_maps{ role: "presentation" }
            -# TODO: We want a real count there, eventually.
            = link_to(t("pages.tabs.maps", count: 1).html_safe, page_maps_path(page_id: @page.id), remote: true)
        %li#page_nav_classifications{ role: "presentation" }
          = link_to(t("pages.tabs.classifications").html_safe, page_classifications_path(page_id: @page.id), remote: true)
        - if @page.articles.size > 1
          %li#page_nav_details{ role: "presentation" }
            = link_to(t("pages.tabs.details", count: @page.articles.size).html_safe, page_details_path(page_id: @page.id), remote: true)
        %li#page_nav_names{ role: "presentation" }
          = link_to(t("pages.tabs.names", count: @page.names_count).html_safe, page_names_path(page_id: @page.id), remote: true)
        - if @page.literature_and_references_count > 1
          %li#page_nav_literature_and_references{ role: "presentation" }
            = link_to(t("pages.tabs.literature_and_references", count: @page.literature_and_references_count).html_safe, page_literature_and_references_path(page_id: @page.id), remote: true)

      #page_nav_content
        = render("page_traits")
