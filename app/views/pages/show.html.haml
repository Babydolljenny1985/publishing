- if @page.occurrence_map?
  - content_for :head do
    - prefix = @page.id.to_i % 100
    = javascript_include_tag "http://maps.google.com/maps/api/js?key=#{Rails.application.secrets.google_maps_key}"
    = javascript_include_tag "maps_vendored"
    = javascript_include_tag "http://media.eol.org/content/maps/#{prefix}/#{@page.id}.json"
    = javascript_include_tag "maps"
#page
  .uk-margin-top
    %ul#page_nav.uk-tab.uk-child-width-expand
      - tab(name: "cover", icon: "browser", count: nil, path: page_cover_path(page_id: @page.id), active: true)
      - if @page.media_count > 0
        - tab(name: "media", icon: "image", count: @page.media_count, path: page_media_path(page_id: @page.id))
      - unless @page.traits.empty?
        - tab(name: "traits", icon: "tag", count: @page.traits_count, path: page_traits_path(page_id: @page.id))
      - if @page.map?
        -# TODO: We want to use @page.maps_count here, eventually. ...but we don't SHOW those maps yet...
        - tab(name: "maps", icon: "world", count: 1, path: page_maps_path(page_id: @page.id))
      - if @page.articles.size > 0
        - tab(name: "details", icon: "info", count: @page.articles_count, path: page_details_path(page_id: @page.id))
      - tab(name: "classifications", icon: "git-branch", count: @page.nodes_count, path: page_classifications_path(page_id: @page.id))
      - tab(name: "names", icon: "quote-right", count: @page.names_count, path: page_names_path(page_id: @page.id))
      - if @page.literature_and_references_count > 1
        - tab(name: "literature_and_references", icon: "bookmark", count: @page.literature_and_references_count, path: page_literature_and_references_path(page_id: @page.id))
    #tab_content
      .ui.inverted.dimmer
        .ui.loader
      #page_nav_content
        = render("cover")
