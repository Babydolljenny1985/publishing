- if @page.occurrence_map?
  - content_for :head do
    - prefix = @page.id.to_i % 100
    = javascript_include_tag "http://maps.google.com/maps/api/js?key=#{Rails.application.secrets.google_maps_key}"
    = javascript_include_tag "maps_vendored"
    = javascript_include_tag "http://media.eol.org/content/maps/#{prefix}/#{@page.id}.json"
    = javascript_include_tag "maps"
#page.container{"data-turbolinks": "false"}
  #page_control{ ng: { controller: "PageCtrl as ctrl" } }
    -# NOTE: it doesn't cache this, so we store it rather than call it over
    -# and over:
    - ancestors = @page.native_node.ancestors
    #breadcrumbs.page-ancestors.uk-card.uk-card-body.uk-card-primary.uk-card-small
      %ul.uk-breadcrumb
        - shown_ellipsis = false
        - ancestors.each do |node|
          - unless node.has_breadcrumb?
            - unless shown_ellipsis
              %li= link_to("â€¦", page_breadcrumbs_path(page_id: @page.id), remote: true)
              - shown_ellipsis = true
            - next
          %li= link_to(node.canonical_form.html_safe, node.page_id ? page_path(node.page_id) : "#")
          - shown_ellipsis = false
    .whatever
      %br
    .uk-grid
      #names{ class: "page-names uk-width-2-3@m" }
        %h1.uk-heading-primary.uk-heading-divider= @page.name.titlecase
        %h2= @page.scientific_name.html_safe
        - trophic_strat = begin
          - @page.traits.find { |t| t[:predicate][:uri] == "http://www.wikidata.org/entity/Q1053008" }[:object_term][:name]
        - rescue => e
          -# Do nothing. This code doesn't even belong here. I'm rushing.
        -# TODO: this is all temporary! We need a real solution:
        %p.uk-text-lead
          = "The #{@page.name} is a(n) #{trophic_strat} #{ancestors[0].name} "
          - if ancestors[-2]
            = "in the #{ancestors[-2].rank.try(:name) || "clade"} #{ancestors[-2].name}."
          It lives in a variety of habitats around the world.
      %p{ class: "uk-width-1-3@m" }
        = link_to t(:taxon_collect_button), new_collected_page_path(page_id: @page.id), class: "uk-button uk-button-default"
    .space
      %br
      %br
    %ul#page_nav.uk-tab.uk-child-width-expand
      - if @page.media_count > 0
        %li#page_nav_media.uk-active{ role: "presentation" }
          = link_to(t("pages.tabs.media", count: @page.media_count).html_safe, page_media_path(page_id: @page.id), remote: true)
      - if @page.traits
        %li#page_nav_traits{ role: "presentation" }
          = link_to(t("pages.tabs.traits", count: @page.traits.size).html_safe, page_traits_path(page_id: @page.id), remote: true)
      - if @page.article
        %li#page_nav_article{ role: "presentation" }
          = link_to(t("pages.tabs.article").html_safe, page_article_path(page_id: @page.id), remote: true)
      - if @page.map?
        %li#page_nav_maps{ role: "presentation" }
          -# TODO: We want a real count there, eventually.
          = link_to(t("pages.tabs.maps", count: 1).html_safe, page_maps_path(page_id: @page.id), remote: true)
      %li#page_nav_classifications{ role: "presentation" }
        = link_to(t("pages.tabs.classifications").html_safe, page_classifications_path(page_id: @page.id), remote: true)
      - if @page.articles.size > 1
        %li#page_nav_details{ role: "presentation" }
          = link_to(t("pages.tabs.details", count: @page.articles.size).html_safe, page_details_path(page_id: @page.id), remote: true)
      %li#page_nav_names{ role: "presentation" }
        = link_to(t("pages.tabs.names", count: @page.names_count).html_safe, page_names_path(page_id: @page.id), remote: true)
      - if @page.literature_and_references_count > 1
        %li#page_nav_literature_and_references{ role: "presentation" }
          = link_to(t("pages.tabs.literature_and_references", count: @page.literature_and_references_count).html_safe, page_literature_and_references_path(page_id: @page.id), remote: true)
    #page_nav_content
      = render("page_media")
