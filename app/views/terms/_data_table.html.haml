- data = [] unless local_assigns.has_key?(:data)
- pages = [] unless local_assigns.has_key?(:pages)
= paginate data unless data.empty?
#data_table.uk-overflow-auto
  %table.data_by_predicate.uk-table.uk-table-small.uk-table-striped.uk-table-middle.uk-table-hover.uk-text-small
    %thead
      %tr
        - if @object
          %th.uk-width-1-4= t("data_table.headers.page")
          %th.uk-width-1-4= t("data_table.headers.predicate")
          %th.uk-width-1-4= t("data_table.headers.value")
          %th.uk-width-1-4= t("data_table.headers.source")
        - else
          %th.uk-width-1-3= t("data_table.headers.page")
          %th.uk-width-1-3= t("data_table.headers.value")
          %th.uk-width-1-3= t("data_table.headers.source")
    %tbody
      -# TODO: helper
      - prev_page_id = nil
      - data.each do |trait|
        - page_id = trait[:page_id]
        - if page = pages[page_id]
          %tr.toggle_meta{ id: trait[:id], data: { action: datum_path(trait[:id]) }  }
            %td
              - if prev_page_id != page_id
                .uk-grid{ uk: { grid: true } }
                  .uk-width-1-4
                    - show_data_page_icon(page)
                  .uk-width-3-4
                    - show_data_page_name(page)

              - prev_page_id = page_id
            - if @object || @and_predicate
              %th{ scope: "row" }
                = link_to(trait[:predicate][:name], term_path(uri: trait[:predicate][:uri]))
                - show_data_modifiers(trait)
            %td
              - show_data_value(trait)
              - show_data_modifiers(trait) unless @object
              - metadata_container(trait)
            - show_source_col(trait)
= paginate data unless data.empty?
