= form_tag term_search_path, :method => :get, :id => "new_term_query" do 
  - @filters.each_with_index do |filter, index|
    .filter-row
      = fields_for "filters[]", filter do |ff|
        = ff.select :pred_uri, @predicate_options, {}, :class => "js-pred-select"
        = ff.select :op, op_select_options(ff.object), {}, :class => "js-op-select"
        - if ff.object.is_a? TermQueryNumericFilter
          = ff.number_field :value
          %span= unit(ff.object.pred_uri)
        - elsif ff.object.is_a? TermQueryRangeFilter
          = ff.number_field :from_value
          %span to
          = ff.number_field :to_value
          %span= unit(ff.object.pred_uri)
        - elsif ff.object.is_a? TermQueryObjectTermFilter
          = ff.select :obj_uri, obj_term_options(ff.object.pred_uri), {}, :class => "js-term-select"
        .minus-term-icon.js-remove-filter{:'uk-icon' => "icon: minus-circle", :data => { :index => index }}

  %button.js-add-filter Add filter
  
  %div
    = submit_tag "Search"

-#
  = f.fields_for :pairs do |ff|
    .js-trait-fields{:'uk-grid' => true}
      .uk-width-expand
        .uk-form-controls
          = ff.select :predicate, @predicate_options, {}, :class => "uk-select js-pred-select js-term-select"
      .uk-width-expand
        = ff.label :object, t("term.label.value"), :class=> "uk-form-label"
        .uk-form-controls
          - options = ff.object.predicate ? obj_term_options(ff.object.predicate) : []
          - disabled = options.empty?
          = ff.select :object, obj_term_options(ff.object.predicate), {}, :disabled => disabled, :class => "uk-select js-obj-select js-term-select"
      - if @query.pairs.length > 1
        .uk-width-1-6.uk-position-relative
          .minus-term-icon.js-remove-pair{:'uk-icon' => "icon: minus-circle", :data => { :index => ff.index }}
  %button.uk-button.uk-margin.js-add-pair Add
  %div{:'uk-grid' => true}
    .uk-width-1-2.js-typeahead-wrap
      = f.label :clade, t("clade"), :class => "uk-form-label"
      .uk-form-controls
        = text_field_tag(:clade_name, f.object.clade_name, :class => "uk-input js-clade-typeahead typeahead", placeholder: @clade_name)
        = f.hidden_field :clade, :class => "js-clade-field"
    -# TODO: implement sort
      .uk-width-1-2
        = f.label :sort, :class => "uk-form-label"
        .uk-form-controls
        = f.select :sort, options_for_select(@query.sort_options), {}, :class => "uk-select"
  %div{:'uk-grid' => true}
    %div
      = label_tag :result_type_record, t("term.label.records_matching_any")
      = radio_button_tag :result_type, :record, @result_type == :record
    %div
      = label_tag :search_type_page, t("term.label.taxa_matching_all")
      = radio_button_tag :result_type, :page, @result_type == :page
  = f.submit t("term.actions.search"), :class => "uk-button uk-button-default uk-margin-top"
  = f.submit t("term.actions.download_csv"), :formaction => term_search_path(:format => :csv), :class => "uk-button uk-button-default uk-margin-top uk-float-right"
