= form_for @query, :url => term_search_path, :method => :get, :class => "uk-form-stacked term-form" do |f|
  = f.fields_for :pairs do |ff|
    .js-trait-fields{:'uk-grid' => true}
      .uk-width-1-2
        = ff.label :predicate, :class => "uk-form-label"
        .uk-form-controls
          = ff.select :predicate, @predicate_options, {}, :class => "uk-select js-pred-select js-term-select"
      .uk-width-1-2
        = ff.label :object, :class=> "uk-form-label"
        .uk-form-controls
          - options = ff.object.predicate ? obj_term_options(ff.object.predicate) : []
          - disabled = options.empty?
          = ff.select :object, obj_term_options(ff.object.predicate), {}, :disabled => disabled, :class => "uk-select js-obj-select js-term-select"
  %div{:'uk-grid' => true}
    .uk-width-1-2.js-typeahead-wrap
      = f.label :clade, :class => "uk-form-label"
      .uk-form-controls
        = text_field_tag(:clade_text, @clade_text, :class => "uk-input js-clade-typeahead typeahead")
        = f.hidden_field :clade, :class => "js-clade-field" 
    -#
      .uk-width-1-2
        = f.label :sort, :class => "uk-form-label"
        .uk-form-controls
        = f.select :sort, options_for_select(@query.sort_options), {}, :class => "uk-select"
  %div{:'uk-grid' => true}
    %div
      = f.label :type_record, "Records matching ANY predicate/object pair"
      = f.radio_button :type, :record
    %div
      = f.label :search_type_page, "Taxa matching ALL predicate/object pairs"
      = f.radio_button :type, :page
  = f.submit "Search", :class => "uk-button uk-button-default uk-margin-top"
