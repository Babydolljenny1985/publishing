#term.uk-container
  .uk-card.uk-card-default.uk-grid.uk-padding
    .uk-width-4-5
      %h1
        = @term[:name].titlecase
        .uk-text-muted.uk-margin-remove-top.uk-text-small
          = t("term.header.count", count: @count)
          - if @object
            = t("term.header.object_term")
          - else
            = t("term.header.predicate")
      - def_blank = @term[:definition].blank?
      %h3.uk-text-muted.uk-margin-remove-top
        = @term[:uri]
      %p.definition{ class: def_blank ? "empty" : nil }
        - if def_blank
          = t(:uri_definition_blank)
        - else
          = @term[:definition].html_safe
    .actions.uk-width-1-5
      %button#sort_button.ui.labeled.small.icon.basic.button.uk-margin-small-top
        %i.down.arrow.icon
        = t("term.actions.sort")
      %div{ uk: { dropdown: true } }
        %ul.uk-dropdown-nav.uk-nav
          - params_dup = params_less(:sort, :sort_dir)
          %li= link_to(t("traits_sort_dropdown.alphabetical"), term_path(params_dup))
          %li= link_to(t("traits_sort_dropdown.alphabetical_rev"), term_path(params_dup.merge(sort_dir: "desc")))
          %li= link_to(t("traits_sort_dropdown.value"), term_path(params_dup.merge(sort: "measurement")))
          %li= link_to(t("traits_sort_dropdown.value_rev"), term_path(params_dup.merge(sort: "measurement", sort_dir: "desc")))
      %button.ui.small.basic.button.uk-margin-small-top
        - if params[:object]
          = link_to(t("term.actions.glossary"), object_term_glossary_path)
        - else
          = link_to(t("term.actions.glossary"), predicate_glossary_path)
      %button.ui.small.basic.button.uk-margin-small-top
        - params_dup = params_less(:species_list)
        - if @species_list
          = link_to(t("term.actions.show_records"), term_path(params_dup))
        - else
          = link_to(t("term.actions.species_list"), term_path(params_dup.merge(species_list: true)))
      %button.ui.small.basic.button.uk-margin-small-top
        = link_to(t("term.actions.download"), term_path(params.merge(format: "csv")))
    .clade_filter.uk-margin-top
      = form_tag(term_path, method: "get", autocomplete: "off") do
        - hide_params_in_form(["clade"])
        .uk-panel{ uk: { height: { match: true }, grid: true } }
          - if @clade
            .uk-margin-right
              - show_trait_page_icon(@clade)
          %div
            = t("term.show.clade_filter.label")
          %div
            = text_field_tag("clade", nil,
              placeholder: @clade ? @clade.name : t(:clade_placeholder),
              remote: true, class: "uk-input uk-form-width-medium typeahead")
          %div
            = submit_tag(t("filter"), class: "ui basic button")
      - if @clade
        .uk-panel.uk-margin-small-top
          - mod_params = params_less(:clade)
          = link_to(t("term.show.clade_filter.clear"), term_path(mod_params))
  .uk-margin-top
    - if @species_list
      %ul.uk-list
        - @pages.each do |_, page|
          = render("pages/as_row",
            page: page,
            icon: page.icon,
            media: [],
            common: page.name,
            scientific: page.scientific_name)
    - else
      = render 'traits_table', { traits: @grouped_traits, pages: @pages }
