#term.uk-container
  .uk-card.uk-card-default.uk-grid.uk-padding
    .uk-width-4-5
      %h1
        = @term[:name].titlecase
        .uk-text-muted.uk-margin-remove-top.uk-text-small
          = t("term.header.count", count: @count)
          - if @object
            = t("term.header.object_term")
          - else
            = t("term.header.predicate")
      - def_blank = @term[:definition].blank?
      %h3.uk-text-muted.uk-margin-remove-top
        = @term[:uri]
      %p.definition{ class: def_blank ? "empty" : nil }
        - if def_blank
          = t(:uri_definition_blank)
        - else
          = @term[:definition].html_safe
    .actions.uk-width-1-5
      %button#sort_button.ui.labeled.small.icon.basic.button.uk-margin-small-top
        %i.down.arrow.icon
        = t("term.actions.sort")
      %div{ uk: { dropdown: true } }
        %ul.uk-dropdown-nav.uk-nav
          %li= link_to(t("traits_sort_dropdown.alphabetical"), term_path(uri: @term[:uri], object: @object))
          %li= link_to(t("traits_sort_dropdown.alphabetical_rev"), term_path(uri: @term[:uri], object: @object, sort_dir: "desc"))
          %li= link_to(t("traits_sort_dropdown.value"), term_path(uri: @term[:uri], object: @object, sort: "measurement"))
          %li= link_to(t("traits_sort_dropdown.value_rev"), term_path(uri: @term[:uri], object: @object, sort: "measurement", sort_dir: "desc"))
      - if is_admin?
        %button.ui.small.basic.button.uk-margin-small-top
          = link_to(t("term.actions.glossary"), glossary_path)
    .uk-margin-top
      = form_tag(term_path(@term[:uri])) do
        = t("term.show.clade_filter")
        = text_field_tag("clade", nil,
          placeholder: t(:clade_placeholder),
          remote: true, class: "uk-input uk-form-width-medium")
        = submit_tag(t("filter"), class: "ui basic button")
  = render 'traits_table', { traits: @grouped_traits, pages: @pages }
