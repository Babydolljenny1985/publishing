.search_result_container
  .ui.inverted.dimmer
    .ui.loader
  %h2= t("search_results.section_titles.media", count: @media.total_count)
  = paginate @media, remote: true, params: { only: "media" }
  %ul.uk-list
    - @media.results.each_with_index do |medium, i|
      %li.uk-card.uk-card-hover.eol-bright.uk-box-shadow-small
        .uk-card-body.uk-grid-small{ uk: { grid: true } }
          .eol-width-medium-icon
            - if medium.respond_to?(:medium_icon_url)
              = link_to(image_tag(medium.medium_icon_url), medium)
            - else
              %i.huge.ui.icon.file.text.outline
          .uk-width-expand
            .names
              - name = medium.try(:search_highlights).try(:[], :name) || medium.name
              = link_to(name.titleize.html_safe, medium, class: "primary-name")
            .fields
              - unless @q.blank?
                %b= t("search_results.field_matches.#{medium.is_a?(Medium) ? "description" : "body"}")
              - desc = medium.try(:search_highlights).try(:[], :description)
              - if desc
                = desc.html_safe
              - else
                = emphasize_match(medium.description, @q)
              - unless @q.blank?
                - if medium.resource_pk =~ /#{@q}/
                  %br/
                  %b= t("search_results.field_matches.resource_pk")
                  - rpk = medium.try(:search_highlights).try(:[], :resource_pk)
                  - if rpk
                    = rpk.html_safe
                  - else
                    = emphasize_match(medium.resource_pk, @q)
              %br/
              - if @q.blank? || medium.owner !~ /^[&(Â©]/
                %b
                  = t("content_attributions_labels.owner")
                  \:
              - owner = medium.try(:search_highlights).try(:[], :owner) || emphasize_match(medium.owner, @q)
              = owner
  = paginate @media, remote: true, params: { only: "media" }
