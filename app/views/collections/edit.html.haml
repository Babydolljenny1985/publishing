= form_for(@collection) do |f|
  .jumbotron
    .row
      .col-md-9
        .field
          = label_tag(:name)
          = f.text_field :name
        .field
          = label_tag(:description)
          %br/
          = f.text_area(:description, cols: "80", rows: "6")
      - if policy(@collection).update?
        %p.col-md-3.actions
          = f.submit(class: "btn btn-default")
          %br/
          %button.btn.btn-default
            = link_to(t(:cancel), collection_path(@collection))

  - if @collection.collected_pages.empty?
    %p= t(:collection_pages_empty)
  - else
    %h2= t(:collected_pages_title)
    %table.collections
      %tbody
        - @collection.collected_pages.each do |collected_page|
          - page = collected_page.page
          %tr
            %th.collection-table-image{ scope: "row" }
              = link_to(image_tag(collected_page.icon), page)
            %th{ scope: "row" }
              .names.d-inline
                - common = collected_page.name.titleize.html_safe
                - scientific = collected_page.scientific_name_string.html_safe
                - if common.blank?
                  = link_to(scientific, page, class: "primary-name")
                - else
                  = link_to(common, page, class: "primary-name")
                  %br/
                  = link_to(scientific, page, class: "secondary-name")
                %br/
                -# - group_num = 0
                %row.icons_12_wide
                  = f.fields_for(:collected_pages, collected_page) do |cp_f|
                    = cp_f.hidden_field(:id, id: collected_page.id)
                    - page.media[0..29].each do |medium|
                      .col-md-1
                        = cp_f.radio_button(:medium_id, medium.id, checked: medium == collected_page.medium || medium == page.top_image)
                        -# TODO: figure out how to format this, add make sure translation is used:
                        icon
                        = check_box_tag("collection[collected_pages_attributes][#{cp_f.index}][medium_ids][]", medium.id, collected_page.medium_ids.include?(medium.id))
                        -# TODO: figure out how to format this, add make sure translation is used:
                        add
                        = image_tag(medium.small_icon_url, class: "img-responsive", size: "88x88")
  - if @collection.collection_associations.empty?
    %p= t(:collection_associations_empty)
  - else
    /# TODO
    Ooops, this is not implemented
