- open_row = defined?(open_row) ? open_row : false
- hide_pred_when_closed = local_assigns.fetch(:hide_pred_when_closed, false)
- key = "trait_bank/data_row/#{I18n.locale}#{'/open' if open_row}#{'/show_taxon' if show_taxon}/trait_#{trait[:id]}/page_#{trait[:page_id]}/hide_pred_when_closed/#{hide_pred_when_closed}"
- cache(key) do
  - Rails.logger.info("&& TB Cached #{key}")
  - pages = {} unless local_assigns.has_key?(:pages)
  - page_id = trait[:page_id]
  - if !local_assigns.has_key?(:page)
    - page = page_id ? pages[page_id] : nil

  %li.trait.js-data-row{ :data => { :'show-path' => datum_path(:id => trait[:id], :page_id => page.nil? ? nil : page.id, :show_taxon => show_taxon, hide_pred_when_closed: hide_pred_when_closed), :id => trait[:id] } }
    - if show_taxon && page
      .trait-thumb
        - show_data_page_icon page
    - predicate = trait[:predicate]

    .trait-source= show_source_segment(trait, @resources)
    .trait-data{ class: show_taxon ? "" : "trait-data-no-icon" }
      - if show_taxon && page
        = link_to(page.scientific_name.html_safe, page)
      %div
        - if open_row || !hide_pred_when_closed
          .trait-pred.term-info-a.a.js-predicate= i18n_term_name(predicate)
        = render :partial => "terms/desc_meta", :locals => { :term => predicate, :search_link => true }
      .trait-val
        - show_data_value(trait)
        - if trait[:object_term]
          = render :partial => "terms/desc_meta", :locals => { :term => trait[:object_term], :search_link => true, :pred_uri => trait[:predicate][:uri] }
      - modifier_content = modifier_txt(trait)
      - if modifier_content
        .trait-mod= modifier_txt(trait)
    - extra_metadata = trait_property_metadata(trait)
    - if open_row && (page || trait[:metadata]&.any? || extra_metadata.any? || trait[:scientific_name])
      %ul.meta-items.js-meta-items
        - Array(trait[:metadata]).each do |datum|
          %li.meta-item
            %div
              .meta-pred.a= i18n_term_name(datum[:predicate])
              = render :partial => "terms/desc_meta", :locals => { :term => datum[:predicate], :search_link => false }
            .meta-val
              - show_data_value(datum)
              - if datum[:object_term]
                = render :partial => "terms/desc_meta", :locals => { :term => datum[:object_term], :search_link => false }
        - extra_metadata.each do |m|
          %li.meta-item
            .meta-pred= m[:label]
            - is_uri = URI.parse(m[:value]).kind_of?(URI::HTTP) rescue nil
            .meta-val= is_uri ? link_to(m[:value], m[:value]) : m[:value].html_safe
        - if page
          %li.meta-item
            .meta-pred= t("terms.record_url")
            - url = datum_url(id: trait[:id])
            .meta-val= link_to url, url
      %i.fa.fa-angle-up.fa-2x.meta-items-arw.js-meta-arw{ :'data-hide-pred-when-closed' => hide_pred_when_closed }
    - else
      %i.fa.fa-angle-down.fa-2x.meta-items-arw.js-load-arw
