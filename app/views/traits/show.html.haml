#trait.container
  .jumbotron
    %h1= @uri.name.titlecase
    - def_blank = @uri.definition.blank?
    %h2= @uri.uri
    %p.definition{ class: def_blank ? "empty" : nil }
      - if def_blank
        = t(:uri_definition_blank)
      - else
        = @uri.definition.html_safe
  %table.traits_by_predicate.table.table-hover.table-condensed.table-bordered.table-striped
    %tbody
     
      -# TODO: helper
      - prev_page_id = nil
      - @grouped_traits.each do |trait|
        %tr{ id: trait[:id] }
          - page_id = trait[:page_id]
          - page = @pages[page_id]
          %th.trait-table-image{ scope: "row" }
            - if prev_page_id != page_id
              - if image = page.top_image
                = link_to(image_tag(image.small_icon_url, alt: page.scientific_name.html_safe, size: "88x88"), page)
          %th.trait-table-name{ scope: "row" }
            - if prev_page_id != page_id
              .names.d-inline
                - if page.name
                  = link_to(page.name.titlecase, page, class: "primary-name")
                  %br/
                  = link_to(page.scientific_name.html_safe, page, class: "secondary-name")
                - else
                  = link_to(page.scientific_name.html_safe, page, class: "primary-name")
            - prev_page_id = page_id
          %td
            - if trait[:measurement]
              = trait[:measurement]
              = @glossary[trait[:units]].name
            - elsif trait[:term]
              = @glossary[trait[:term]].name
            - elsif trait[:literal]
              = trait[:literal].html_safe
            - else
              Augh! Could not find a displayable value from keys of:
              = trait.keys.join(", ")
          -# TODO: Make this a proper link just yet. Later.
          %td.table-source
            - if resource = @resources[trait[:resource_id]]
              = link_to(resource.name, "#", title: resource.name, data: { toggle: "tooltip", placement: "left" } )
            - else
              t(:resource_missing)          
    = paginate @grouped_traits