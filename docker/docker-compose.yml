version: '3.0' # NOTE: this is NOT a version of the *file*, it's a version of the config formatting to use. Keep it here.
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.9
    container_name: eol-backend-elasticsearch
    restart: always
    environment:
      - RAILS_ENV
      - bootstrap.memory_lock=true
      - cluster.name=eol-search-${RAILS_ENV}
      - "ES_JAVA_OPTS=-Xms4g -Xmx4g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./templates/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - /data/eol-backend-elasticsearch/data:/var/data/elasticsearch
      - /data/eol-backend-elasticsearch/log:/var/log/elasticsearch
    ports:
      - 9200:9200
    networks:
      - eolnet
  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.9
    container_name: eol-backend-elasticsearch2
    environment:
      - RAILS_ENV
      - cluster.name=eol-search-${RAILS_ENV}
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms4g -Xmx4g"
      - "discovery.zen.ping.unicast.hosts=[eol-backend-elasticsearch,eol-backend-elasticsearch3]"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./templates/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - /data/eol-backend-elasticsearch2/data:/var/data/elasticsearch
      - /data/eol-backend-elasticsearch2/log:/var/log/elasticsearch
    networks:
      - eolnet
  elasticsearch3:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.9
    container_name: eol-backend-elasticsearch3
    environment:
      - cluster.name=eol-search-${RAILS_ENV}
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms4g -Xmx4g"
      - "discovery.zen.ping.unicast.hosts=[eol-backend-elasticsearch,eol-backend-elasticsearch2]"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./templates/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - /data/eol-backend-elasticsearch3/data:/var/data/elasticsearch
      - /data/eol-backend-elasticsearch3/log:/var/log/elasticsearch
    networks:
      - eolnet
  memcached:
    image: memcached
    container_name: eol-backend-memcached
    restart: always
    environment:
      - TZ=America/New_York
    command: memcached -m 4096m
    networks:
      - eolnet
  neo4j:
    image: neo4j
    container_name: eol-backend-neo4j
    restart: always
    environment:
      - RAILS_ENV
      - TZ=America/New_York
      - NEO4J_AUTH=neo4j/SomePasswordHere
      - NEO4J_dbms_memory_pagecache_size=4G
      - NEO4J_dbms_memory_heap_maxSize=16G
    volumes:
      - /data/eol-backend-neo4j/data:/data
      - /data/eol-backend-neo4j/logs:/logs
      - ./resources/templates/neo4j.conf:/conf/neo4j.conf
    networks:
      - eolnet
  mysql:
    image: mysql:5.7.31
    container_name: eol_publishing_mysql_ENV
    restart: always
    environment:
      - TZ=America/New_York
      - MYSQL_ROOT_PASSWORD=SomethingReallySecure
      - MYSQL_DATABASE=eol_web_ENV
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=SomethingSuperSecureHereToo
    volumes:
       - /u/data/eol_publishing_mysql_ENV:/var/lib/mysql
       - /u/data/eol_publishing_mysql_ENV_temp:/tmp
       - /u/data/eol_publishing_mysql_ENV_conf:/etc/mysql/conf.d/
    networks:
      - eolnet
  redis: # WARNING: It's simpler to just skip persistence, but that means we lose the entire queue on restart.
    image: redis:6.0
    container_name: redis
    restart: always
    ports:
      - 6379:6379
  pub_web:
    build: ..
    image: eol_website
    container_name: pub_web
    restart: always
    environment: # NOTE: see https://docs.docker.com/compose/environment-variables/ for details.
      - RAILS_ENV
      - ELASTICSEARCH_URL=elasticsearch:9200
      - EOL_REDIS=redis://redis:6379
      - REDIS_PROVIDER=EOL_REDIS
    volumes:
      - ./resources/secrets.yml:/app/config/secrets.yml
      - ../config/supervisord_publishing.conf:/etc/supervisord.conf
      - /data/eol-backend-tramea:/app/public/data
      - /data/eol-backend-tramea-private-data:/app/data
      - /eol/tmp/eol_website:/tmp
    depends_on:
      - mysql
      - neo4j
      - memcached
      - elasticsearch
      - redis
    links:
      - elasticsearch
      - memcached:memcached
      - mysql
      - neo4j
      - redis
    ports:
       - 3000:3000
    networks:
      - eolnet
  pub_jobs:
    build: ..
    image: eol_website
    container_name: pub_jobs
    restart: always
    environment: # NOTE: see https://docs.docker.com/compose/environment-variables/ for details.
      - RAILS_ENV
      - ELASTICSEARCH_URL=elasticsearch:9200
      - EOL_REDIS=redis://redis:6379
      - REDIS_PROVIDER=EOL_REDIS
    volumes: # NOTE: YES, it shares the data volumes with production, so you can download the files that were processed here.
      - ./resources/secrets.yml:/app/config/secrets.yml
      - ../config/supervisord_jobs.conf:/etc/supervisord.conf
      - /data/eol-backend-tramea:/app/public/data
      - /data/eol-backend-tramea-private-data:/app/data
      - /eol/tmp/eol_website_jobs:/tmp
    depends_on:
      - mysql
      - neo4j
      - memcached
      - elasticsearch
      - redis
    links:
      - elasticsearch
      - memcached
      - mysql
      - neo4j
      - redis
    networks:
      - eolnet
  newrelic:
    image: newrelic/infrastructure:latest
    container_name: newrelic
    cap_add:
      - SYS_PTRACE
    network_mode: host
    pid: host
    privileged: true
    volumes:
      - "/:/host:ro"
      - /var/run/docker.sock:/var/run/docker.sock
      - ./resources/newrelic-infra.conf:/etc/newrelic-infra.yml
      - ../config/newrelic_logging:/etc/newrelic-infra/logging.d
    restart: unless-stopped
networks:
  eolnet:
    driver: bridge
